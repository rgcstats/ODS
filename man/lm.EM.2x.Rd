% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/lm_EM_2x.R
\name{lm.EM.2x}
\alias{lm.EM.2x}
\title{Calculates maximum likelihood estimators for linear regression of complex survey data}
\usage{
lm.EM.2x(ys, x1s, x2s, p.s, specs, pi.s, pi.fn, N, R, Rquad)
}
\arguments{
\item{ys}{vector of sample values of the dependent variable}

\item{x1s}{sample values for covariate 1 (continuous)}

\item{x2s}{sample values for covariate 2 (binary)}

\item{p.s}{A function defining the ODS sample design.
It must take arguments ys, yr, log and stuff, and return
the probability (or log of the probability) that a particular
sample was selected.}

\item{specs}{An object containing detailed specifications of the design.}

\item{pi.s}{n-vector (where n=length(y)) of probabilities of selection for the sample units}

\item{pi.fn}{Optional. The approximate probability that a unit is selected as a function of y. If provided,
a more efficient algorithm is used.}

\item{N}{the population size}

\item{R}{the number of simulations used in the monte carlo approximation
of the likelihood}

\item{Rquad}{number of quadrature points}
}
\value{
a vector containing p estimated coefficients (where p=ncol(xs)) and the
estimated error standard deviation. No variance estimates provided.
}
\description{
This function fits a linear model to complex sample data by maximum likelihood
}
\details{
Add some details later.
}
\examples{
data(population_example)
eg.ybar.pi <- sum(sample.example$y/sample.example$pi) / sum(1/sample.example$pi)
eg.s2.pi <- sum((sample.example$y-eg.ybar.pi)^2/sample.example$pi)/sum(1/sample.example$pi)
eg.pi.fn <- function(y){ out <- sqrt( 0.1 + 0.9*(y-eg.ybar.pi)^2/eg.s2.pi )
out <- out * mean(sample.example$pi) /
       mean(sqrt( 0.1 + 0.9*(sample.example$y-eg.ybar.pi)^2/eg.s2.pi ))
out  }
lm.MLE.2x(ys=sample.example$y,x1s=sample.example$x1,x2s=sample.example$x2,p.s=p.s.ushaped,
       specs=c(n0=10,tuner=0.1,return.what=1),pi.s=sample.example$pi,N=1000,R=10)
}
