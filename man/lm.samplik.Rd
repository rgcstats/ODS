% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/lm_samplik.R
\name{lm.samplik}
\alias{lm.samplik}
\title{Calculates maximum sample likelihood estimators for linear regression}
\usage{
lm.samplik(ys, xs, pi.fn, R = 150, method = "GH", subdivisions = 100,
  estimate.var = FALSE)
}
\arguments{
\item{ys}{vector of sample values of the dependent variable}

\item{xs}{matrix of covariate values (number of rows must equal n where n is length of ys).
Intercept is not assumed, so xs should contain a column of 1s if you want an intercept in the model.}

\item{pi.fn}{a function taking a single argument y and returning the probability
of selection}

\item{R}{number of points used in quadrature calculation of integral}

\item{method}{Character. "GH" for Gauss-Hermite quadrature, "q" for quantile-based integration,
"i" to use integrate function (slow).}

\item{subdivisions}{Number of subdivisions to use in integration when method="i"}

\item{estimate.var}{If TRUE, variance is estimated using the observed information. Defaults to FALSE}
}
\value{
a vector containing p estimated coefficients (where p=ncol(xs)) and the
estimated error standard deviation. If estimate.var=TRUE then variance estimates are provided.
}
\description{
This function fits a linear model to complex sample data by maximum sample likelihood
}
\details{
See Krieger and Pfefferman's paper.
The dependent variable is assumed to be normally distributed.
}
\examples{
data(population_example)
lm.samplik(ys=sample.example$y,xs=cbind(1,sample.example$x),
pi.fn=function(y,log=FALSE){
out <- sqrt(0.1+0.9*(y-5)^2/1)
if(log) return(log(out))
if(!log) return(out)})
}
